<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Bike Details</title>
    <link rel="stylesheet" href="/stylesheets/style.css" />
    <style>
      body {
        font-family: Arial, sans-serif;
        margin: 0;
        padding: 0;
      }

      header {
        background-color: Dark Bule;
        color: #fff;
        padding: 10px 20px;
        display: flex;
        justify-content: space-between;
        align-items: center;
      }

      nav ul {
        list-style-type: none;
        padding: 0;
        margin: 0;
      }

      nav ul li {
        display: inline;
        margin-right: 10px;
      }

      nav ul li a {
        text-decoration: none;
        color: #fff;
      }

      .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
      }

      img {
        max-width: 100%;
        display: block;
        margin-bottom: 20px;
      }

      table {
        width: 100%;
        border-collapse: collapse;
        margin-bottom: 20px;
      }

      th,
      td {
        padding: 8px;
        text-align: left;
        border-bottom: 1px solid #ddd;
      }

      th {
        background-color: #f2f2f2;
      }

      form {
        margin-bottom: 20px;
      }

      select {
        padding: 8px;
        font-size: 16px;
        border: 1px solid #ddd;
        border-radius: 4px;
      }

      button {
        padding: 8px 20px;
        font-size: 16px;
        background-color: #4caf50;
        color: #fff;
        border: none;
        border-radius: 4px;
        cursor: pointer;
      }

      button:hover {
        background-color: #45a049;
      }

      a {
        text-decoration: none;
        color: #007bff;
      }

      a:hover {
        text-decoration: underline;
      }

      /* Rating CSS */
      .rating-container {
        margin-bottom: 20px;
      }

      .rating-container label {
        margin-right: 10px;
      }

      .rating-container select {
        padding: 8px;
        font-size: 16px;
        border: 1px solid #ddd;
        border-radius: 4px;
      }

      .rating-container button {
        padding: 8px 20px;
        font-size: 16px;
        background-color: #4caf50;
        color: #fff;
        border: none;
        border-radius: 4px;
        cursor: pointer;
      }

      .rating-container button:hover {
        background-color: #45a049;
      }

      .rating {
        margin-top: 10px;
        font-size: 18px;
      }
    </style>
  </head>
  <body>
    <header>
      <img
        src="/image/logo.png"
        alt="WiselyWheel"
        width="150mm"
        height="100mm"
      />
      <nav>
        <ul>
          <li><a href="">Home</a></li>
          <li><a href="/browse">Browse Bikes</a></li>
          <li><a href="/compare">Compare Bikes</a></li>
          <li><a href="/aboutus">About Us</a></li>
          <li><a href="/logout">Logout</a></li>
        </ul>
      </nav>
    </header>

    <div class="container">
      <% if (bike.image_url) { %>
      <img src="<%= bike.image %>" alt="Bike Image" />
      <% } %>

      <!-- Rating form -->
      <div class="rating-container">
        <form id="ratingForm">
          <label for="rating">Rate this bike:</label>
          <select id="rating" name="rating">
            <option value="1">1</option>
            <option value="2">2</option>
            <option value="3">3</option>
            <option value="4">4</option>
            <option value="5">5</option>
          </select>
          <button type="submit">Submit Rating</button>
        </form>

        <div class="rating" id="ratingDisplay"></div>
      </div>

      <table>
        <tr>
          <th>Bike Details</th>
          <th>Value</th>
        </tr>
        <tr>
          <td>Brand</td>
          <td><%= bike.brand %></td>
        </tr>
        <tr>
          <td>Variant Name</td>
          <td><%= bike.variant_name %></td>
        </tr>
        <tr>
          <td>Price</td>
          <td><%= bike.price %></td>
        </tr>
        <tr>
          <td>Engine Type</td>
          <td><%= bike.engine_type %></td>
        </tr>
        <tr>
          <td>Displacement</td>
          <td><%= bike.displacement %></td>
        </tr>
        <tr>
          <td>Max Torque</td>
          <td><%= bike.max_torque %></td>
        </tr>
        <tr>
          <td>Cooling System</td>
          <td><%= bike.cooling_system %></td>
        </tr>
        <tr>
          <td>Valve Per Cylinder</td>
          <td><%= bike.valve_per_cylinder %></td>
        </tr>
        <tr>
          <td>Starting</td>
          <td><%= bike.starting %></td>
        </tr>
        <tr>
          <td>Fuel Supply</td>
          <td><%= bike.fuel_supply %></td>
        </tr>
        <tr>
          <td>Clutch</td>
          <td><%= bike.clutch %></td>
        </tr>
        <tr>
          <td>Ignition</td>
          <td><%= bike.ignition %></td>
        </tr>
        <tr>
          <td>Mileage</td>
          <td><%= bike.mileage %></td>
        </tr>
        <tr>
          <td>Body Type</td>
          <td><%= bike.bodytype %></td>
        </tr>
        <tr>
          <td>0-100 Kmph(sec)</td>
          <td><%= bike.zero_100Kmph_sec %></td>
        </tr>
        <tr>
          <td>Peak Power</td>
          <td><%= bike.peak_power %></td>
        </tr>
        <tr>
          <td>Transmission</td>
          <td><%= bike.transmission %></td>
        </tr>
      </table>

      <a href="/">Back to Search</a>
    </div>

    <script>
      document.addEventListener("DOMContentLoaded", () => {
        const urlParams = new URLSearchParams(window.location.search);
        const bikeId = urlParams.get("id");

        // Function to fetch and display the rating
        const fetchRating = async () => {
          try {
            const response = await fetch(`/api/bike/rating/${bikeId}`);
            if (response.ok) {
              const rating = await response.text();
              const ratingDisplay = document.getElementById("ratingDisplay");
              ratingDisplay.textContent = `Average Rating: ${rating}`;
            } else {
              console.error("Failed to fetch rating");
            }
          } catch (error) {
            console.error("Error fetching rating:", error);
          }
        };

        fetchRating(); // Call the function when the page loads

        // Function to save the user's rating locally
        const saveRatingLocally = (rating) => {
          localStorage.setItem(`bikeRating_${bikeId}`, rating);
        };

        // Function to get the user's rating from local storage
        const getRatingLocally = () => {
          return localStorage.getItem(`bikeRating_${bikeId}`);
        };

        // Check if the user has already rated the bike and set the select value accordingly
        const userRating = getRatingLocally();
        if (userRating) {
          document.getElementById("rating").value = userRating;
        }

        // Submit rating form
        const ratingForm = document.getElementById("ratingForm");
        ratingForm.addEventListener("submit", async (event) => {
          event.preventDefault();
          const formData = new FormData(ratingForm);
          const rating = formData.get("rating");

          try {
            const response = await fetch("/api/bike/rate", {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify({ bikeId: bikeId, rating }),
            });
            if (response.ok) {
              alert("Rating submitted successfully");
              fetchRating(); // Update the displayed rating
              saveRatingLocally(rating); // Save the rating locally
            } else {
              const errorMessage = await response.text();
              alert(`Error: ${errorMessage}`);
            }
          } catch (error) {
            console.error("Error submitting rating:", error);
            alert("Failed to submit rating. Please try again later.");
          }
        });
      });
    </script>
  </body>
</html>
